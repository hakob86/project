const puppeteer = require('puppeteer-extra');
const StealthPlugin = require('puppeteer-extra-plugin-stealth');
const fs = require('fs').promises;
const path = require('path');
const fetch = (...args) => import('node-fetch').then(({ default: fetch }) => fetch(...args));

puppeteer.use(StealthPlugin());

async function wait(ms, msg) {
  if (msg) console.log(msg);
  return new Promise(resolve => setTimeout(resolve, ms));
}

async function autoScroll(page, maxScrolls = 10) {
  for (let i = 0; i < maxScrolls; i++) {
    await page.evaluate(() => window.scrollBy(0, window.innerHeight));
    await wait(1200 + Math.random() * 600, `[DEBUG] –°–∫—Ä–æ–ª–ª–∏–º #${i + 1}`);
  }
  await page.evaluate(() => window.scrollTo(0, 0));
}

async function parseAllPages(page, topic, maxPages = 3) {
  let allJobs = [];
  for (let pageIndex = 1; pageIndex <= maxPages; pageIndex++) {
    if (pageIndex > 1) {
      // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
      const nextBtnSelector = `button[data-test="pagination-item"][data-ev-page_index="${pageIndex}"]`;
      await page.waitForSelector(nextBtnSelector, { timeout: 15000 });
      await page.click(nextBtnSelector);
      await wait(4000, `[DEBUG] –ü–µ—Ä–µ—à–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É ${pageIndex}`);
    }

    // –î–µ–ª–∞–µ–º —Å–∫—Ä–æ–ª–ª–∏–Ω–≥ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
    await autoScroll(page, 8);

    // –°–æ–±–∏—Ä–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    await page.waitForSelector('article[data-test="JobTile"]', { timeout: 30000 });
    const jobs = await page.$$eval('article[data-test="JobTile"]', cards => cards.map(card => {
      const title = card.querySelector('h2.job-tile-title, h2, h1, h3')?.innerText || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è';
      const linkEl = card.querySelector('a[data-test*="job-tile-title-link"]');
      const link = linkEl ? new URL(linkEl.getAttribute('href'), 'https://www.upwork.com').toString() : '';
      const desc = card.querySelector('div[data-test="UpCLineClamp JobDescription"] p, p')?.innerText || '';
      const published = card.querySelector('[data-test="job-pubilshed-date"] span:last-child')?.innerText || '';
      const price = card.querySelector('li[data-test="is-fixed-price"] strong:last-child')?.innerText || '';
      const type = card.querySelector('li[data-test="job-type-label"] strong')?.innerText || '';
      const exp = card.querySelector('li[data-test="experience-level"] strong')?.innerText || '';
      const location = card.querySelector('li[data-test="location"] span:not(.sr-only)')?.innerText || '';
      const paymentVerified = !!card.querySelector('[data-test="payment-verified"]');
      return { title, link, desc, published, price, type, exp, location, paymentVerified };
    }));
    allJobs = allJobs.concat(jobs);
    console.log(`[INFO] –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${pageIndex}: —Å–æ–±—Ä–∞–Ω–æ ${jobs.length} –∑–∞–∫–∞–∑–æ–≤`);
  }
  return allJobs;
}

(async () => {
  try {
    const [, , topicRaw = 'ai'] = process.argv;
    const topic = topicRaw.trim();
    const outputPath = path.resolve(__dirname, '../results/upwork.json');

    // 1. –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —É–∂–µ –æ—Ç–∫—Ä—ã—Ç–æ–º—É Chrome
    const response = await fetch('http://localhost:9222/json/version');
    const data = await response.json();
    const wsEndpoint = data.webSocketDebuggerUrl;
    const browser = await puppeteer.connect({
      browserWSEndpoint: wsEndpoint,
      defaultViewport: null,
    });

    // 2. –ò—â–µ–º —É–∂–µ –æ—Ç–∫—Ä—ã—Ç—É—é –≤–∫–ª–∞–¥–∫—É —Å Upwork (–ù–ï —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é!)
    const pages = await browser.pages();
    let page = pages.find(p => p.url().includes('upwork.com'));
    if (!page) {
      throw new Error('–ù–µ—Ç –æ—Ç–∫—Ä—ã—Ç–æ–π –≤–∫–ª–∞–¥–∫–∏ Upwork! –û—Ç–∫—Ä–æ–π –µ—ë –≤—Ä—É—á–Ω—É—é –∏ –ø—Ä–æ–π–¥–∏ Cloudflare');
    }

    // 3. –í—Å–µ–≥–¥–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–∏—Å–∫–∞ Upwork
    await page.goto('https://www.upwork.com/nx/search/jobs/', { waitUntil: 'networkidle2', timeout: 60000 });
    await wait(2000, '[DEBUG] –ü–µ—Ä–µ—à–ª–∏ –Ω–∞ /search/jobs');
    console.log('[DEBUG] –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π URL:', page.url());
    if (!page.url().includes('/search/jobs')) {
      throw new Error('[FATAL] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ø–∞—Å—Ç—å –Ω–∞ /search/jobs. –¢—ã –Ω–∞: ' + page.url());
    }

    // 4. –í–≤–æ–¥–∏–º –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∏ –∂–º—ë–º Enter (—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–µ–ª–µ–∫—Ç–æ—Ä)
    await page.waitForSelector('input[type="search"][placeholder]', { timeout: 25000 });
    const searchInput = await page.$('input[type="search"][placeholder]');
    await searchInput.click({ clickCount: 3 });
    await page.keyboard.press('Backspace');
    await wait(400, '[DEBUG] –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞...');
    await searchInput.type(topic, { delay: 110 });
    await wait(400, '[DEBUG] –í–≤–æ–¥–∏–º –∑–∞–ø—Ä–æ—Å...');
    await page.keyboard.press('Enter');
    await wait(3500, '[DEBUG] –ñ–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫...');

    // 5. –ü–∞—Ä—Å–∏–º –≤—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    const jobs = await parseAllPages(page, topic, 3); // 3 —Å—Ç—Ä–∞–Ω–∏—Ü—ã

    await fs.writeFile(outputPath, JSON.stringify(jobs, null, 2), 'utf-8');
    console.log(`[DONE] –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ ${jobs.length} –∑–∞–∫–∞–∑–æ–≤ –≤ ${outputPath}`);

    // --- –õ–û–ì–ê–£–¢ –ü–û–°–õ–ï –ü–ê–†–°–ò–ù–ì–ê ---
    try {
      let userMenuBtn = await page.$('button[aria-label="Open user menu"]');
      if (!userMenuBtn) userMenuBtn = await page.$('img.nav-user-avatar');
      if (!userMenuBtn) throw new Error('–ù–µ—Ç –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!');
      await userMenuBtn.click();
      await wait(1000, '[DEBUG] –û—Ç–∫—Ä—ã–ª –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
      await page.waitForSelector(
        'button[data-cy="logout-trigger"], a[href*="logout"], button[data-ev-label="logout"]',
        { timeout: 10000 }
      );
      const logoutBtn = await page.$('button[data-cy="logout-trigger"], a[href*="logout"], button[data-ev-label="logout"]');
      if (!logoutBtn) throw new Error('–ù–µ –Ω–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ logout!');
      await logoutBtn.click();
      await wait(2000, '[INFO] Logout (Sign Out) —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω!');
      console.log('[INFO] –í—ã–ø–æ–ª–Ω–µ–Ω logout –∞–∫–∫–∞—É–Ω—Ç–∞ Upwork');
    } catch (err) {
      console.warn('[WARN] –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å logout:', err.message);
    }

    await browser.disconnect?.();

  } catch (err) {
    logger.error(`‚ùå –û—à–∏–±–∫–∞: ${err.message}`);
  } finally {
    if (browser) {
      await wait(10000, 'üì¥ –ó–∞–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞');
      await browser.close();
    }
  }
})();
